{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Numbers.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["Filter","newFilter","handleFilterChange","type","value","onChange","PersonForm","props","handleSubmitEvent","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","Numbers","filteredPersons","deletePerson","map","person","key","name","number","onClick","Notification","message","isError","className","baseUrl","axios","get","then","response","data","personObject","post","id","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setIsError","useEffect","personService","initialPersons","resetFormFields","filter","toLowerCase","includes","event","target","preventDefault","oldPersonData","newPersonData","newPerson","foundPerson","find","window","confirm","returnedPerson","setTimeout","catch","error","concat","addPerson","deletablePerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1bd9eb48.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({newFilter, handleFilterChange}) => (\r\n  <div>\r\n    Filter shown with\r\n    <input type=\"text\"\r\n           value={newFilter}\r\n           onChange={handleFilterChange}\r\n    />\r\n  </div>\r\n)\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\n\r\nconst PersonForm = (props) => {\r\n  const {\r\n    handleSubmitEvent,\r\n    newName,\r\n    handleNameChange,\r\n    newNumber,\r\n    handleNumberChange,\r\n  } = props;\r\n\r\n  return(\r\n    <form onSubmit={handleSubmitEvent}>\r\n      <div>\r\n        Name:\r\n        <input type=\"text\"\r\n               value={newName}\r\n               onChange={handleNameChange}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        Number:\r\n        <input type=\"tel\"\r\n               value={newNumber}\r\n               onChange={handleNumberChange}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm;\r\n","import React from 'react';\r\n\r\nconst Numbers = ({filteredPersons, deletePerson}) => (\r\n  filteredPersons.map(person =>\r\n    <div key={person.name}>\r\n      {person.name} {person.number}\r\n\r\n      <button onClick={() => deletePerson(person)}>Delete</button>\r\n    </div>\r\n  )\r\n);\r\n\r\nexport default Numbers;\r\n","import React from 'react';\r\n\r\nconst Notification = ({message, isError}) => {\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className={isError ? 'notification error' : 'notification success'}>\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n\r\n  return request\r\n    .then(response => response.data);\r\n}\r\n\r\nconst create = personObject => {\r\n  const request = axios.post(baseUrl, personObject);\r\n\r\n  return request\r\n    .then(response => response.data);\r\n}\r\n\r\nconst remove = id => axios.delete(`${baseUrl}/${id}`);\r\n\r\nconst edit = (id, person) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, person);\r\n\r\n  return request\r\n    .then(response => response.data);\r\n}\r\n\r\nexport default {getAll, create, remove, edit};\r\n","import React, {useEffect, useState} from 'react';\r\n\r\nimport Filter from './components/Filter';\r\nimport PersonForm from './components/PersonForm';\r\nimport Numbers from './components/Numbers';\r\nimport Notification from './components/Notification';\r\nimport personService from './services/persons';\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState('');\r\n  const [newNumber, setNewNumber] = useState('');\r\n  const [newFilter, setNewFilter] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    personService\r\n      .getAll()\r\n      .then(initialPersons => {\r\n        setPersons(initialPersons);\r\n      })\r\n  }, []);\r\n\r\n  const resetFormFields = () => {\r\n    setNewName('');\r\n    setNewNumber('');\r\n  }\r\n\r\n  const addPerson = (newPerson) => {\r\n    personService\r\n      .create(newPerson)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.concat(returnedPerson));\r\n        resetFormFields();\r\n\r\n        setIsError(false);\r\n        setMessage(`${returnedPerson.name} added!`);\r\n\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 5000);\r\n      })\r\n      .catch(error => {\r\n        setIsError(true);\r\n        setMessage(error.response.data.error);\r\n\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 5000);\r\n      });\r\n  }\r\n\r\n  const editPerson = (oldPersonData, newPersonData) => {\r\n    personService\r\n      .edit(oldPersonData.id, newPersonData)\r\n      .then(returnedPerson => {\r\n        setPersons(persons.map(person => person.id !== oldPersonData.id\r\n          ? person\r\n          : returnedPerson\r\n        ));\r\n        resetFormFields();\r\n\r\n        setIsError(false);\r\n        setMessage(`${returnedPerson.name} edited!`);\r\n\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 5000);\r\n      })\r\n      .catch(error => {\r\n        setIsError(true);\r\n        setMessage(`${oldPersonData.name} has already been removed from the server! More info: ${error}`);\r\n\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 5000)\r\n      })\r\n  }\r\n\r\n  const handleSubmitEvent = (event) => {\r\n    event.preventDefault();\r\n\r\n    const newPerson = {\r\n      name: newName,\r\n      number: newNumber,\r\n    }\r\n\r\n    const foundPerson = persons.find(person =>\r\n      person.name === newPerson.name\r\n    );\r\n\r\n    if (foundPerson) {\r\n      if (window.confirm(\r\n        `${foundPerson.name} is already added to phonebook. Replace the old number with a new one?`\r\n      )) {\r\n        editPerson(foundPerson, newPerson);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    addPerson(newPerson);\r\n  }\r\n\r\n  const deletePerson = deletablePerson => {\r\n    if (!window.confirm(`Delete ${deletablePerson.name}?`)) return;\r\n\r\n    personService\r\n      .remove(deletablePerson.id)\r\n      .then(() => {\r\n        setPersons(persons.filter(person => person.id !== deletablePerson.id));\r\n        setIsError(false);\r\n        setMessage(`${deletablePerson.name} deleted!`);\r\n\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 5000);\r\n      })\r\n      .catch(error => {\r\n        setIsError(true);\r\n        setMessage(`${deletablePerson.name} has already been removed from the server! More info: ${error}`);\r\n\r\n        setTimeout(() => {\r\n          setMessage(null);\r\n        }, 5000);\r\n      });\r\n  }\r\n\r\n  const filteredPersons = (newFilter !== '')\r\n    ? persons.filter(person =>\r\n      person.name.toLowerCase().includes(newFilter.toLowerCase())\r\n    )\r\n    : persons;\r\n\r\n  const handleFilterChange = (event) => {\r\n    setNewFilter(event.target.value);\r\n  }\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  }\r\n\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n\r\n      <Notification message={message}\r\n                    isError={isError}\r\n      />\r\n\r\n      <Filter newFilter={newFilter}\r\n              handleFilterChange={handleFilterChange}\r\n      />\r\n\r\n      <h3>Add a new contact</h3>\r\n\r\n      <PersonForm handleSubmitEvent={handleSubmitEvent}\r\n                  newName={newName}\r\n                  handleNameChange={handleNameChange}\r\n                  newNumber={newNumber}\r\n                  handleNumberChange={handleNumberChange}\r\n      />\r\n\r\n      <h3>Numbers</h3>\r\n\r\n      <Numbers filteredPersons={filteredPersons}\r\n               deletePerson={deletePerson}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}